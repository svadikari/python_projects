# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install fastapi sqlalchemy psycopg2 httpx pydantic-settings pytest-bdd pytest-html pytest-metadata email-validator
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        echo 'Package installations successful!'
        # stop the build if there are Python syntax errors or undefined names
        #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Setup postgres sql
      uses: ikalnytskyi/action-setup-postgres@v5
      with:
        username: dummy
        password: dummy
        database: orders-db
        port: 5432
      id: postgres
    
    - name: Test
      run: |
        cd fastapi-rest
        pytest --html=reports.html tests/
    # - name: BDD Tests
    #   run: |
    #     cd fastapi-rest
    #     ls -ltr
    #     pytest-bdd features
deploy:
  needs: build
  runs-on: ubuntu-latest
  steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.13.15 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "fastapi-orders" #Must be unique in Heroku
          heroku_email: "svadikari@gmail.com"
          appdir: "fastapi-orders" # <- This will point to the api folder in your project
    
  
    
